{"version":3,"file":"revue.es.js","sources":["../src/index.ts"],"sourcesContent":["type RevueCompoent<T = Record<string, any>> = (props: T) => RevueElement;\nconst REVUE_ELEMENT: Symbol = Symbol();\n\ninterface State {\n  value: any;\n  next: State | null;\n}\n\ninterface HookState {\n  currentHook: Hook | null;\n  firstHook: Hook | null;\n}\n\ninterface Hook {\n  initValue: any;\n  value: any;\n  next: Hook | null;\n}\n\ninterface UpdateQueue {\n  update: Update | null;\n  lastUpdate: Update | null;\n}\n\ninterface Update<A = any> {\n  action: A;\n  next: Update | null;\n}\n\nexport class StateImpl implements State {\n  constructor(public value: any, public next: State | null = null) {}\n}\n\nexport interface RevueElement {\n  rawType: Symbol;\n  el: Element | null;\n  state: HookState;\n  updateQueue: UpdateQueue;\n  childElement: RevueElement | null;\n  type: string | RevueCompoent;\n  update: any;\n  isMounted: boolean;\n  props: Record<string, any>;\n  children: (RevueElement | any)[];\n}\n\nlet workInProcessElement: RevueElement | null = null;\n\nconst attrMap: Record<string, string> = {\n  className: \"class\",\n  onClick: \"onclick\",\n};\n\nclass RevueElementImpl implements RevueElement {\n  rawType = REVUE_ELEMENT;\n  el = null;\n  updateQueue = {\n    update: null,\n    lastUpdate: null,\n  };\n  state = {\n    currentHook: null,\n    firstHook: null,\n  };\n\n  childElement = null;\n  update = null;\n  isMounted = false;\n  constructor(\n    public type: RevueElement[\"type\"],\n    public props: RevueElement[\"props\"],\n    public children: RevueElement[\"children\"]\n  ) {}\n}\n\nfunction isRevueElement(element: any): element is RevueElement {\n  return element?.rawType === REVUE_ELEMENT;\n}\n\nexport function createElement(\n  type: RevueElement[\"type\"],\n  props: RevueElement[\"props\"],\n  ...children: RevueElement[\"children\"]\n) {\n  return new RevueElementImpl(type, props, children);\n}\n\nfunction appendElement(el: Element, parentEl: Element, index: number) {\n  const oldEl = parentEl.children[index];\n  if (!oldEl) {\n    parentEl.appendChild(el);\n  } else {\n    oldEl.replaceWith(el);\n  }\n}\n\nfunction updateElement(el: Element, props: Record<string, any>) {\n  for (const prop in props) {\n    if (props.hasOwnProperty(prop)) {\n      const value = props[prop];\n      const rawAttrName = attrMap[prop];\n      (el as any)[rawAttrName ? rawAttrName : prop] = value;\n    }\n  }\n}\n\n// let currentFiber: RevueElement | null = null;\nfunction diffProps(props: Record<string, any>, oldProps: Record<string, any>) {\n  const updataProps: Record<string, any> = {};\n  for (const key in props) {\n    if (props.hasOwnProperty(key)) {\n      if (props[key] !== oldProps[key]) {\n        updataProps[key] = props[key];\n      }\n    }\n  }\n  return updataProps;\n}\n\nlet update: any = null;\n\nfunction diff(\n  element: RevueElement | any,\n  parentDom: Element,\n  index: number = 0,\n  oldElement: RevueElement | any = {}\n) {\n  if (isRevueElement(element)) {\n    let revueElement = element;\n    const fnElements = [];\n    while (typeof revueElement.type !== \"string\") {\n      fnElements.push(revueElement);\n      const prewWorkInProcessElement: RevueElement | null =\n        workInProcessElement;\n      workInProcessElement = element;\n      revueElement = revueElement.type(revueElement.props);\n      workInProcessElement.isMounted = true;\n      workInProcessElement = prewWorkInProcessElement;\n    }\n    fnElements.forEach((element: RevueElement) => {\n      element.childElement = revueElement;\n      element.update = () => {\n        diff(element, parentDom, index, revueElement);\n      };\n    });\n\n    const isMultiplex = oldElement.type === revueElement.type;\n\n    const el = (\n      isMultiplex ? oldElement.el : document.createElement(revueElement.type)\n    ) as Element;\n\n    revueElement.el = el;\n\n    const updataProps = diffProps(revueElement.props, oldElement.props ?? {});\n\n    updateElement(el, updataProps);\n\n    if (!isMultiplex) {\n      appendElement(el, parentDom, index);\n    }\n\n    revueElement.children.forEach((element, index) => {\n      const oldElementItem = oldElement.children?.[index] ?? {};\n\n      diff(\n        element,\n        el,\n        index,\n        (typeof oldElementItem.type === \"string\"\n          ? oldElementItem\n          : oldElementItem.childElement) ?? {}\n      );\n    });\n  } else if (element !== oldElement) {\n    const textNode = parentDom.childNodes[index];\n    if (textNode) {\n      if (textNode.textContent !== element) {\n        textNode.textContent = element;\n      }\n    } else {\n      parentDom.appendChild(document.createTextNode(element));\n    }\n  }\n}\n\nexport function getUpdate() {\n  return update;\n}\n\nexport function createRoot(element: RevueElement) {\n  return {\n    mount: (container: Element) => {\n      let child = container.lastElementChild;\n\n      while (child) {\n        container.removeChild(child);\n        child = container.lastElementChild;\n      }\n\n      diff(element, container);\n    },\n  };\n}\n\nfunction createUpdate<A>(action: A): Update<A> {\n  return {\n    action,\n    next: null,\n  };\n}\n\nfunction createHook(initValue: any): Hook {\n  return {\n    initValue,\n    value: initValue,\n    next: null,\n  };\n}\n\nfunction getHook(defalutValue: any): Hook {\n  const element = workInProcessElement as RevueElement;\n  const isMounted = element.isMounted;\n  const hookState = element.state;\n\n  if (isMounted) {\n    const hook = hookState.currentHook as Hook;\n    hookState.currentHook = hook.next;\n    return hook;\n  } else {\n    const hook = createHook(defalutValue);\n    if (!hookState.currentHook) {\n      hook.next = hook;\n      hookState.firstHook = hook;\n      hookState.currentHook = hook;\n    } else {\n      hook.next = hookState.firstHook;\n      hookState.currentHook.next = hook;\n    }\n\n    return hook;\n  }\n}\n\nexport function useState<V = any>(defalutValue: V) {\n  const element = workInProcessElement as RevueElement;\n  const hook = getHook(defalutValue);\n\n  return [\n    hook.value,\n    (value: V) => {\n      const updateQueue = element.updateQueue;\n\n      const update = createUpdate(() => {\n        hook.value = value;\n      });\n\n      if (!updateQueue.lastUpdate) {\n        updateQueue.update = update;\n        updateQueue.lastUpdate = update;\n        setTimeout(() => {\n          while (updateQueue.update) {\n            updateQueue.update.action();\n            updateQueue.update = updateQueue.update.next;\n          }\n          updateQueue.lastUpdate = null;\n          element.update();\n        }, 0);\n      } else {\n        updateQueue.lastUpdate.next = update;\n        updateQueue.lastUpdate = update;\n      }\n    },\n  ];\n}\n"],"names":["REVUE_ELEMENT","Symbol","StateImpl","value","next","constructor","this","workInProcessElement","attrMap","className","onClick","RevueElementImpl","type","props","children","rawType","el","updateQueue","update","lastUpdate","state","currentHook","firstHook","childElement","isMounted","createElement","diff","element","parentDom","index","oldElement","isRevueElement","revueElement","fnElements","push","prewWorkInProcessElement","forEach","isMultiplex","document","updataProps","oldProps","key","hasOwnProperty","diffProps","prop","updateElement","parentEl","oldEl","replaceWith","appendChild","appendElement","oldElementItem","textNode","childNodes","textContent","createTextNode","getUpdate","createRoot","mount","container","child","lastElementChild","removeChild","useState","defalutValue","hook","hookState","initValue","getHook","action","setTimeout"],"mappings":"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"}